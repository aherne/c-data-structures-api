(BUG): 
	If attempting to add list implementations in a tree, a crash occurs on deallocation

ALL:
	use std::logic_error instead of std::out_of_range when applies
	add comparator function pointer arguments to all methods that require a comparator (instead of predefining a comparator):
		list
			- containsValue
			- removeValue
		map
			a hasher and keyComparator are globally required
			value comparator is not required
				- containsValue
				- removeValue
		set
			a hasher and keyComparator are globally required
	ITERATOR INVALIDATION
		list
			dynamic arrays
				whenever an element is removed
				whenever array resizes
			linked lists
				whenever an element is removed
			doubly linked list
				whenever an element is removed
		map
			doubly linked list hash map & hash map
				whenever an element is removed
				whenever buckets resize
			tree map
				whenever an element is removed
		set
			same
linkedhashmap
	(LATER) unique(valueComparator)
map
	(LATER) unify sort test methods (since now iterators work the same)
list
	+ (LATER) unique(valueComparator)
FIX: sort has complexity 2N+logN (because changing tail requires full iteration)
ISSUE: @TreeNode  
+ add UniqueValueTreeNode
+ interators (VERY DIFFICULT)