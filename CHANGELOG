(LATER) unit tests & benchmarks must be split into .h and .cpp
ALL:
	VERY IMPORTANT: invalidate internal iterators on any add/remove
linkedhashmap
	+ (LATER) unique(valueComparator)
map
	* (LATER) add keyComparator and valueComparator template args to all
	* logic of removeIndex/Value should be as simple as @ dlllist
	(LATER) unify sort test methods (since now iterators work the same)
set
	* (LATER) add valueComparator template arg to all
list
	+ create separate test cases for addToTop
		PHP: operator[] will always add to bottom!
	+ (LATER) unique(valueComparator)
	+ (LATER) remove @ iterator
FIX: sort has complexity 2N+logN (because changing tail requires full iteration)
==============================
iterator invalidation
	list
		dynamic arrays
			whenever an element is removed
			whenever array resizes
		linked lists
			whenever an element is removed
		doubly linked list
			whenever an element is removed
	map
		doubly linked list hash map
			whenever an element is removed
			whenever buckets resize
		hash map
			SAME

------------------------------
GRAPH
	HashTable<Vertex> contents;
	
	template<typename VALUE>
	struct Vertex {
		VALUE data;
		ArrayList<Vertex*> edges;	
	}